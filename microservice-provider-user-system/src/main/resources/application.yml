spring:
    application:
        name: microservice-provider-user-system
    datasource:
        name: fire_ads
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://47.94.172.234:3306/user_system?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=false
        username: root
        password: root

        druid:
            initial-size: 30
            max-active: 100        #最大连接池数量
            min-idle: 30                #最小连接池数量
            max-wait: 500 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
            defaultAutoCommit: true #默认自动提交
            validation-query: select 1                #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
            validation-query-timeout: 1                #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
            test-on-borrow:        false        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            test-on-return:        false        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
            test-while-idle:        true        #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            time-between-eviction-runs-millis: 60000        #1分钟（1.0.14）        有两个含义：
                                            #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
            min-evictable-idle-time-millis:  25200000      #30分钟（1.0.14）        连接保持空闲而不被驱逐的最长时间
            filters:    stat,slf4j          #监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
            clear-filters-enable: false   #属性类型是字符串，通过别名的方式配置扩展插件
            remove-abandoned: true
            remove-abandoned-timeout: 1800
            log-abandoned: true
            connection-init-sqls: set names utf8mb4

# 这里是 Mybatis 配置内容
mybatis:
    mapper-locations: "classpath*:/mapper/*Mapper.xml"
    typeAliasesPackage: com.luobosi.cloud.domain


# Eureka 客户端配置信息
server:
  port: 7901
user:
  userServicePath: http://localhost:7900/simple/
eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://user:password123@localhost:8761/eureka
  instance:
    prefer-ip-address: true